module.exports = {
  env: {
    node: true,
    browser: true,
    es2021: true,
  },
  extends: [
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:prettier/recommended',
    'prettier',
  ],
  parserOptions: {
    ecmaVersion: 'latest',
    sourceType: 'module',
    ecmaFeatures: {
      jsx: true,
    },
  },
  plugins: ['prettier', 'react'],
  rules: {
    'prettier/prettier': 'error',

    'array-callback-return': 'error',
    'default-case': 'error',
    'default-case-last': 'error',
    'default-param-last': 'error',
    'array-bracket-newline': ['error', { multiline: true }],
    'array-bracket-spacing': ['error', 'never'],
    'arrow-parens': ['error', 'as-needed'],
    'arrow-spacing': ['error', { before: true, after: true }],
    'block-spacing': 'error',
    'brace-style': ['error', '1tbs', { allowSingleLine: false }],
    camelcase: ['error', { properties: 'always' }],
    'comma-dangle': [
      'error',
      {
        arrays: 'only-multiline',
        objects: 'only-multiline',
        imports: 'never',
        exports: 'never',
        functions: 'ignore',
      },
    ],
    'comma-spacing': ['error', { before: false, after: true }],
    'eol-last': ['error', 'always'],
    eqeqeq: ['error', 'smart'],
    'func-call-spacing': ['error', 'never'],
    'computed-property-spacing': ['error', 'never'],
    'dot-location': ['error', 'property'],
    'implicit-arrow-linebreak': ['error', 'beside'],
    'jsx-quotes': ['error', 'prefer-single'],
    'key-spacing': [
      'error',
      {
        beforeColon: false,
        afterColon: true,
      },
    ],
    'keyword-spacing': ['error', { after: true, before: true }],
    'multiline-ternary': ['error', 'always-multiline'],
    'no-duplicate-imports': ['error'],
    'no-multi-spaces': 'error',
    'no-multiple-empty-lines': ['error', { max: 1 }],
    'no-trailing-spaces': ['error', { skipBlankLines: true }],
    'no-whitespace-before-property': 'error',
    'no-empty-function': 'error',
    'no-mixed-operators': 'error',
    'no-var': 'error',
    'object-curly-newline': ['error', { minProperties: 2 }],
    'object-curly-spacing': ['error', 'always', { arraysInObjects: true, objectsInObjects: true }],
    'object-property-newline': ['error', { allowAllPropertiesOnSameLine: false }],
    'padded-blocks': ['error', 'never'],
    'padding-line-between-statements': [
      'error',
      { blankLine: 'always', prev: ['const', 'let', 'var'], next: '*' },
      {
        blankLine: 'any',
        prev: ['const', 'let', 'var', 'directive'],
        next: ['const', 'let', 'var', 'directive'],
      },
    ],
    'prefer-arrow-callback': 'error',
    'prefer-const': 'error',
    'prefer-destructuring': ['error', { object: true, array: false }],
    'prefer-object-spread': 'error',
    'prefer-rest-params': 'error',
    'prefer-template': 'error',
    'quote-props': ['error', 'as-needed'],
    quotes: ['error', 'single'],
    'rest-spread-spacing': ['error', 'never'],
    semi: ['error', 'always'],
    'sort-keys': ['error', 'asc', { caseSensitive: true, natural: false, minKeys: 2 }],
    'sort-vars': 'error',
    'space-before-blocks': 'error',
    'spaced-comment': ['error', 'always'],
    'vars-on-top': 'error',
    yoda: 'error',
  },
  settings: {
    react: {
      version: 'detect',
    },
  },
};
